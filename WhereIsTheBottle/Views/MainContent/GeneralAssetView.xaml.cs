using System;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media;
using WhereIsTheBottle.ViewModels.MainContent;

namespace WhereIsTheBottle.Views.MainContent
{
	public partial class GeneralAssetView
	{
		private Border _emptyBorder;
		private Border _emptyBorder2;
		private Border _emptyBottlesBorder;
		private Border _fullBottlesBorder;
		private Border _shabbyBottlesBorder;
		private readonly Style _columnStyle;
		private readonly Style _noRightBorderCellStyle;
		private readonly Style _boldCenteredCellStyle;
		private readonly Style _boldHeaderStyle;

		public GeneralAssetView()
		{
			InitializeComponent();
			_columnStyle = FindResource("CenteredTextBlockStyle") as Style;
			_noRightBorderCellStyle = FindResource("NoRightBorderCenteredCellStyle") as Style;
			_boldCenteredCellStyle = FindResource("BoldCenteredCellStyle") as Style;
			_boldHeaderStyle = FindResource("BoldHeaderStyle") as Style;
			CreateAdvancedHeaderGrid();
		}

		private void CreateAdvancedHeaderGrid()
		{
			_emptyBorder = CreateDefaultBorder("");
			_fullBottlesBorder = CreateDefaultBorder("Полные");
			_emptyBottlesBorder = CreateDefaultBorder("Пустые");
			_emptyBorder2 = CreateDefaultBorder("");
			_shabbyBottlesBorder = CreateDefaultBorder("Стройка", true);

			TopPanel.Children.Add(_emptyBorder);
			TopPanel.Children.Add(_fullBottlesBorder);
			TopPanel.Children.Add(_emptyBottlesBorder);
			TopPanel.Children.Add(_emptyBorder2);
			TopPanel.Children.Add(_shabbyBottlesBorder);
		}

		private Border CreateDefaultBorder(string text, bool showRightBorder = false)
		{
			var rightBorderThickness = 0;
			if(showRightBorder)
			{
				rightBorderThickness = 1;
			}

			return new()
			{
				BorderBrush = Brushes.Gray,
				BorderThickness = new Thickness(1, 1, rightBorderThickness, 0),
				HorizontalAlignment = HorizontalAlignment.Stretch,
				Child = new TextBlock
				{
					Text = text,
					VerticalAlignment = VerticalAlignment.Center,
					HorizontalAlignment = HorizontalAlignment.Center
				}
			};
		}

		private void MainDataGrid_OnLayoutUpdated(object sender, EventArgs e)
		{
			if(DataContext is not GeneralAssetViewModel { IsDataLoaded: true } vm)
			{
				return;
			}

			var waterCount = vm.WaterNomenclatures.Count == 0
				? 0
				: vm.WaterNomenclatures.Count + 1;
			var emptyCount = vm.EmptyNomenclatures.Count == 0
				? 0
				: vm.EmptyNomenclatures.Count + 1;
			var shabbyCount = vm.ShabbyNomenclatures.Count == 0
				? 0
				: vm.ShabbyNomenclatures.Count + 1;

			_emptyBorder.Width = MainDataGrid.Columns.Take(1).Sum(x => x.ActualWidth);

			if(waterCount != 0)
			{
				_fullBottlesBorder.Width = MainDataGrid.Columns.Skip(1).Take(waterCount).Sum(x => x.ActualWidth);
			}
			if(emptyCount != 0)
			{
				_emptyBottlesBorder.Width = MainDataGrid.Columns.Skip(1 + waterCount).Take(emptyCount).Sum(x => x.ActualWidth) + 1;
			}
			if(waterCount != 0 && emptyCount != 0)
			{
				_emptyBorder2.Width = MainDataGrid.Columns.Skip(1 + waterCount + emptyCount).Take(1).Sum(x => x.ActualWidth);
			}
			if(shabbyCount != 0)
			{
				_shabbyBottlesBorder.Width = MainDataGrid.Columns
					.Skip(1 + waterCount + emptyCount + (waterCount != 0 && emptyCount != 0 ? 1 : 0))
					.Take(shabbyCount)
					.Sum(x => x.ActualWidth) + 1;
			}
		}

		//Необходимо, чтобы скроллинг работал, когда курсор находится в DataGrid
		private void ScrollViewer_PreviewMouseWheel(object sender, MouseWheelEventArgs e)
		{
			var scv = (ScrollViewer)sender;
			scv.ScrollToVerticalOffset(scv.VerticalOffset - e.Delta);
			e.Handled = true;
		}

		private void MainDataGrid_AutoGeneratedColumns(object sender, EventArgs e)
		{
			var boldStrings = new[] { "Всего", "Всего полных", "Всего пустых" };

			for(int i = 0; i < MainDataGrid.Columns.Count; i++)
			{
				var column = MainDataGrid.Columns[i] as DataGridTextColumn;
				if(column == null)
				{
					continue;
				}
				column.ElementStyle = _columnStyle;
				if(i == MainDataGrid.Columns.Count - 1)
				{
					column.CellStyle = _noRightBorderCellStyle;
				}
				if(boldStrings.Contains(column.Header.ToString()))
				{
					column.HeaderStyle = _boldHeaderStyle;
					column.CellStyle = _boldCenteredCellStyle;
				}

				if(i == 0)
				{
					column.Width = new DataGridLength(150, DataGridLengthUnitType.Star);
					column.MinWidth = 150;
				}
				else
				{
					column.Width = new DataGridLength(40, DataGridLengthUnitType.Star);
					column.MinWidth = 40;
				}
			}
		}
	}
}
