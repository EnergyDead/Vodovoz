<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

	<!-- Label -->

	<Style TargetType="Label">
		<Setter Property="FontFamily"
		        Value="Tahoma"/>
		<Setter Property="FontSize"
		        Value="12"/>
	</Style>

	<Style x:Key="HeaderLabelStyle"
	       TargetType="Label"
	       BasedOn="{StaticResource {x:Type Label}}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<Style x:Key="ItalicHeaderLabelStyle"
	       TargetType="Label"
	       BasedOn="{StaticResource {x:Type Label}}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontStyle" Value="Italic"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<!-- CheckBox -->

	<Style TargetType="CheckBox">
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<!-- TextBox -->

	<Style TargetType="TextBox">
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<Style TargetType="hc:TextBox"
	       BasedOn="{StaticResource {x:Type TextBox}}"/>

	<!-- TextBlock -->

	<Style TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>

	<Style x:Key="CenteredTextBlockStyle"
	       TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style TargetType="DatePicker">
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment"  Value="Center"/>
		<Setter Property="Padding"  Value="0 3 0 0"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<Style TargetType="Button"
	       x:Key="SimpleButtonStyle">
		<Setter Property="Width"
		        Value="70"/>
		<Setter Property="Height"
		        Value="22"/>
		<Setter Property="Background"
		        Value="WhiteSmoke"/>
	</Style>

	<!-- Spinner -->

	<Style x:Key="RoundSpinner"
	       TargetType="{x:Type fa:ImageAwesome}">
		<Setter Property="Icon"
		        Value="Spinner"/>
		<Setter Property="Spin"
		        Value="True"/>
	</Style>

	<Style x:Key="SmallSpinner"
	       TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource RoundSpinner}">
		<Setter Property="Height"
		        Value="15"/>
		<Setter Property="Width"
		        Value="15"/>
	</Style>

	<Style x:Key="MediumSpinner"
	       TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource RoundSpinner}">
		<Setter Property="Height"
		        Value="25"/>
		<Setter Property="Width"
		        Value="25"/>
	</Style>

	<Style x:Key="LargeSpinner"
	       TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource RoundSpinner}">
		<Setter Property="Height"
		        Value="50"/>
		<Setter Property="Width"
		        Value="50"/>
	</Style>

	<Style x:Key="SmallOrangeSpinner" TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource SmallSpinner}">
		<Setter Property="Foreground"
		        Value="Orange"/>
	</Style>

	<Style x:Key="MediumOrangeSpinner" TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource MediumSpinner}">
		<Setter Property="Foreground"
		        Value="Orange"/>
	</Style>

	<Style x:Key="LargeOrangeSpinner" TargetType="{x:Type fa:ImageAwesome}"
	       BasedOn="{StaticResource LargeSpinner}">
		<Setter Property="Foreground"
		        Value="Orange"/>
	</Style>

	<!-- DataGrid -->

	<Style x:Key="HeaderWrapStyle"
	       TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock
						Text="{Binding}"/>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontSize"
		        Value="11"/>
		<Setter Property="FontFamily"
		        Value="Tahoma"/>
		<Setter Property="TextBlock.TextAlignment"
		        Value="Center"/>
		<Setter Property="VerticalContentAlignment"
		        Value="Center"/>
		<Setter Property="HorizontalContentAlignment"
		        Value="Center"/>
	</Style>

	<Style x:Key="HeaderStyle"
	       TargetType="{x:Type DataGridColumnHeader}"
	       BasedOn="{StaticResource HeaderWrapStyle}">
		<Setter Property="HorizontalAlignment"
		        Value="Stretch"/>
		<Setter Property="MinWidth"
		        Value="20"/>
		<Setter Property="MinHeight"
		        Value="30"/>
	</Style>

	<Style x:Key="BoldHeaderStyle"
	       TargetType="{x:Type DataGridColumnHeader}"
	       BasedOn="{StaticResource HeaderStyle}">
		<Setter Property="FontWeight"
		        Value="Bold"/>
	</Style>

	<!-- 	<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" -->
	<!-- 	Color="#FF000000" /> -->
	<!-- <Style x:Key="DefaultDataGridCellStyle" -->
	<!-- 	TargetType="{x:Type DataGridCell}" > -->
	<!-- 	<Setter Property="Background" -->
	<!-- 		Value="Transparent" /> -->
	<!-- 	<Setter Property="BorderBrush" -->
	<!-- 		Value="Transparent" /> -->
	<!-- 	<Setter Property="BorderThickness" -->
	<!-- 		Value="1" /> -->
	<!-- 	<Setter Property="Template" > -->
	<!-- 		<Setter.Value> -->
	<!-- 			<ControlTemplate TargetType="{x:Type DataGridCell}" > -->
	<!-- 				<Border Background="{TemplateBinding Background}" -->
	<!-- 					BorderThickness="{TemplateBinding BorderThickness}" -->
	<!-- 					BorderBrush="{TemplateBinding BorderBrush}" -->
	<!-- 					SnapsToDevicePixels="True" > -->
	<!-- 					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" /> -->
	<!-- 				</Border> -->
	<!-- 			</ControlTemplate> -->
	<!-- 		</Setter.Value> -->
	<!-- 	</Setter> -->
	<!-- 	<Style.Triggers> -->
	<!-- 		<Trigger Property="IsSelected" -->
	<!-- 			Value="True" > -->
	<!-- 			<Setter Property="Background" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
	<!-- 			<Setter Property="Foreground" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" /> -->
	<!-- 			<Setter Property="BorderBrush" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
	<!-- 		</Trigger> -->
	<!-- <Trigger Property="IsKeyboardFocusWithin" -->
	<!-- 	Value="True" > -->
	<!-- 	<Setter Property="BorderBrush" -->
	<!-- 		Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" /> -->
	<!-- </Trigger> -->
	<!-- 		<MultiTrigger> -->
	<!-- 			<MultiTrigger.Conditions> -->
	<!-- 				<Condition Property="IsSelected" -->
	<!-- 					Value="true" /> -->
	<!-- 				<Condition Property="Selector.IsSelectionActive" -->
	<!-- 					Value="false" /> -->
	<!-- 			</MultiTrigger.Conditions> -->
	<!-- 			<Setter Property="Background" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
	<!-- 			<Setter Property="BorderBrush" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
	<!-- 			<Setter Property="Foreground" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" /> -->
	<!-- 		</MultiTrigger> -->
	<!-- 		<Trigger Property="IsEnabled" -->
	<!-- 			Value="false" > -->
	<!-- 			<Setter Property="Foreground" -->
	<!-- 				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
	<!-- 		</Trigger> -->
	<!-- 	</Style.Triggers> -->
	<!-- </Style> -->

	<Style x:Key="CenteredCellStyle"
	       TargetType="DataGridCell">
		<Setter Property="TextBlock.TextAlignment"
		        Value="Center"/>
		<Setter Property="TextBlock.TextWrapping"
		        Value="Wrap"/>
		<Setter Property="MinHeight"
		        Value="25"/>
		<Style.Triggers>
			<Trigger Property="DataGridCell.IsSelected" Value="True">
				<Setter Property="Background" Value="#CDF4FF"/>
				<Setter Property="BorderBrush" Value="#CDF4FF"/>
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="Selector.IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="#E6FAFF"/>
				<Setter Property="BorderBrush" Value="#E6FAFF"/>
			</MultiTrigger>
			<Trigger Property="IsKeyboardFocusWithin"
			         Value="True">
				<Setter Property="BorderBrush"
				        Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="NoRightBorderCenteredCellStyle"
	       TargetType="DataGridCell"
	       BasedOn="{StaticResource CenteredCellStyle}">
		<Setter Property="Margin"
		        Value="0,0,-1,0"/>
	</Style>

	<Style x:Key="BoldCenteredCellStyle"
	       TargetType="DataGridCell"
	       BasedOn="{StaticResource CenteredCellStyle}">
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>

	<!-- <Style x:Key="DataGridContentCellCentering" -->
	<!-- 	TargetType="{x:Type DataGridCell}" > -->
	<!-- 	<Setter Property="Template" > -->
	<!-- 		<Setter.Value> -->
	<!-- 			<ControlTemplate TargetType="{x:Type DataGridCell}" > -->
	<!-- 				<Label Content="{TemplateBinding Content}" -->
	<!-- 					HorizontalContentAlignment="Center" -->
	<!-- 					HorizontalAlignment="Stretch" -->
	<!-- 					Background="{TemplateBinding Background}" /> -->
	<!-- 			</ControlTemplate> -->
	<!-- 		</Setter.Value> -->
	<!-- 	</Setter> -->
	<!-- </Style> -->

	<Style x:Key="DataGridMainContentStyle"
	       TargetType="DataGrid">
		<Setter Property="AutoGenerateColumns"
		        Value="False"/>
		<Setter Property="CellStyle"
		        Value="{StaticResource CenteredCellStyle}"/>
		<Setter Property="IsReadOnly"
		        Value="True"/>
		<Setter Property="ColumnHeaderStyle"
		        Value="{StaticResource HeaderStyle}"/>
		<Setter Property="CanUserAddRows"
		        Value="False"/>
		<Setter Property="VerticalGridLinesBrush"
		        Value="Gray"/>
		<Setter Property="HorizontalGridLinesBrush"
		        Value="Gray"/>
		<Setter Property="HeadersVisibility"
		        Value="Column"/>
		<Setter Property="BorderThickness"
		        Value="1 1 1 0"/>
	</Style>

</ResourceDictionary>
